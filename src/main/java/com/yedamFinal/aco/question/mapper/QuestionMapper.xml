<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.yedamFinal.aco.question.mapper.QuestionMapper">
	<!-- 질문글 전체조회 -->
	<select id="getQuestionList" resultType="QuestionVO">
	  SELECT
            a.id, a.profile_image,
            a.QUESTION_BOARD_NO,
            a.MEMBER_NO,
            a.TOPIC,
            a.POINT,
            a.TITLE,
            a.TAG,
            a.CONTENTS,
            a.WRITE_DATE,
            a.VIEW_CNT,
            a.RECOMMEND_CNT,
            a.BOOKMARK_CNT,
            a.ANSWER_CNT
	    FROM (
	        SELECT 
	            ROWNUM AS RN,
	            b.id, b.profile_image,
	            b.QUESTION_BOARD_NO,
	            b.MEMBER_NO,
	            b.TOPIC,
	            b.POINT,
	            b.TITLE,
	            b.TAG,
	            b.CONTENTS,
	            b.WRITE_DATE,
	            b.VIEW_CNT,
	            b.RECOMMEND_CNT,
	            b.BOOKMARK_CNT,
	            b.ANSWER_CNT
	            FROM(
	                SELECT m.id, m.profile_image,
	                    q.QUESTION_BOARD_NO,
	                    q.MEMBER_NO,
	                    SUBCODE_TO_NAME(q.TOPIC) as TOPIC,
	                    q.POINT,
	                    q.TITLE,
	                    q.TAG,
	                    q.CONTENTS,
	                    TO_CHAR(q.WRITE_DATE, 'YYYY.MM.DD') as WRITE_DATE,
	                    q.VIEW_CNT,
	                    q.RECOMMEND_CNT,
	                    q.BOOKMARK_CNT,
	                    q.ANSWER_CNT
	            FROM QUESTION_BOARD q
	            JOIN MEMBER m
	            ON q.MEMBER_NO = m.MEMBER_NO
	            ORDER BY WRITE_DATE DESC
	            )B
	        )A
	<![CDATA[
        	WHERE RN > ((#{pageNo}-1) * 5) AND RN <= (#{pageNo}) * 5
	]]>
	</select>
	<select id="getQuestionCount" resultType="int">
		SELECT 
        	COUNT(*) AS CNT
            FROM QUESTION_BOARD
	</select>
	
	<!-- 질문글 분류 조회 -->
	<select id="getQuestionListSelect" resultType="QuestionVO">
		SELECT m.id, m.profile_image,
		    q.QUESTION_BOARD_NO,q.MEMBER_NO,q.TOPIC,q.POINT,q.TITLE,q.TAG,q.CONTENTS,
		    q.WRITE_DATE,q.VIEW_CNT,q.RECOMMEND_CNT,q.BOOKMARK_CNT,q.ANSWER_CNT
		FROM QUESTION_BOARD q
		JOIN MEMBER m
		ON q.MEMBER_NO = m.MEMBER_NO
		WHERE q.TOPIC = #{topic}
		ORDER BY WRITE_DATE DESC
	</select>


	<!-- 질문글,답변글 단건조회 -->
	<select id="getQuestionInfo" resultType="QuestionVO">	
		SELECT m.ID, m.PROFILE_IMAGE,SUBCODE_TO_NAME(m.MEMBER_LEVEL) as member_level,
		 		m2.ID as answer_id , m2.PROFILE_IMAGE as answer_profile_image,SUBCODE_TO_NAME(m2.MEMBER_LEVEL) as answer_member_level,
			    q.QUESTION_BOARD_NO,q.MEMBER_NO,q.TOPIC,q.POINT,q.TITLE,q.TAG,q.CONTENTS,
			    TO_CHAR(q.WRITE_DATE, 'YYYY.MM.DD') as WRITE_DATE,q.VIEW_CNT,q.RECOMMEND_CNT,q.BOOKMARK_CNT,q.ANSWER_CNT,q.REPLY_CNT,
	            a.ANSWER_BOARD_NO,a.QUESTION_BOARD_NO,a.MEMBER_NO as answer_member_no,a.TITLE as answer_title,a.CONTENTS as answer_contents, 
	            TO_CHAR(a.WRITE_DATE, 'YYYY.MM.DD') as ANSWER_WRITE_DATE,a.RECOMMEND_CNT,a.ADOPT_STATUS as answer_adopt_status,a.REPLY_CNT as answer_reply_cnt,
	            d.QUESTION_ADD_NO,d.ANSWER_BOARD_NO,d.CONTENTS as add_contents,d.WRITER_TYPE as add_writer_type,TO_CHAR(d.WRITE_DATE, 'YYYY.MM.DD') as add_write_date, d.ADD_STATUS
			FROM QUESTION_BOARD q LEFT JOIN MEMBER m
	                              ON q.MEMBER_NO = m.MEMBER_NO
	                              LEFT JOIN ANSWER_BOARD a
	                              ON q.QUESTION_BOARD_NO = a.QUESTION_BOARD_NO
	                              LEFT JOIN QUESTION_ADD d
	                              ON a.ANSWER_BOARD_NO = d.ANSWER_BOARD_NO
	                              LEFT JOIN MEMBER m2
	                              ON a.MEMBER_NO = m2.MEMBER_NO
	        WHERE q.QUESTION_BOARD_NO = #{questionBoardNo}
	        ORDER BY a.ADOPT_STATUS DESC, a.WRITE_DATE DESC
	</select>
	<!-- <select id="getQuestionInfo" resultType="QuestionVO">
		SELECT m.id, m.profile_image,SUBCODE_TO_NAME(m.member_level) as member_level,
		    q.QUESTION_BOARD_NO,q.MEMBER_NO,SUBCODE_TO_NAME(q.TOPIC) as topic,q.POINT,q.TITLE,q.TAG,q.CONTENTS,
		    TO_CHAR(q.WRITE_DATE, 'YYYY.MM.DD') as WRITE_DATE,q.VIEW_CNT,q.RECOMMEND_CNT,q.BOOKMARK_CNT,q.ANSWER_CNT
		FROM QUESTION_BOARD q
		JOIN MEMBER m
		ON q.MEMBER_NO = m.MEMBER_NO
		WHERE QUESTION_BOARD_NO = #{questionBoardNo}
	</select> -->
	
	<!-- 질문글 작성 -->
	<insert id="insertQuestion" parameterType="QuestionVO">
		INSERT INTO QUESTION_BOARD (
		    QUESTION_BOARD_NO,MEMBER_NO,TOPIC, POINT, TITLE, TAG, 
		    CONTENTS, WRITE_DATE, VIEW_CNT, RECOMMEND_CNT, BOOKMARK_CNT, ANSWER_CNT
	    )
	    VALUES(
		    question_board_seq.NEXTVAL, #{memberNo}, #{topic}, #{point}, 
		    #{title}, #{tag},#{contents},SYSDATE,0,0,0,0
	    )
	    <selectKey keyProperty="pk" resultType="int" order="AFTER">
    		SELECT question_board_seq.CURRVAL FROM DUAL
    	</selectKey>
	</insert>
	
	<!-- 질문글 수정 -->
	<update id="updateQuestion" parameterType="QuestionVO">
		UPDATE QUESTION_BOARD
	    SET TOPIC = #{topic}, POINT = #{point}, TITLE = #{title}, TAG = #{tag}, CONTENTS = #{contents}
	    WHERE QUESTION_BOARD_NO = #{questionBoardNo}
	</update>
	
	<!-- 질문글 삭제 -->
	<delete id="deleteQuestion">
		DELETE QUESTION_BOARD
		WHERE QUESTION_BOARD_NO = #{questionBoardNo}
	</delete>
	
	<!-- 조회수 -->
	<update id="updateQuestionViewCnt" parameterType="int">
		UPDATE QUESTION_BOARD SET VIEW_CNT = VIEW_CNT + 1 WHERE QUESTION_BOARD_NO = #{questionBoardNo}
	</update>
	
	
	<!-- 답변글 작성, 수정 -->
	<insert id="insertAnswer" parameterType="QuestionVO">
		INSERT INTO ANSWER_BOARD (
		    ANSWER_BOARD_NO, QUESTION_BOARD_NO, MEMBER_NO, TITLE, CONTENTS, WRITE_DATE, ADOPT_STATUS, ADD_STATUS
		)
		VALUES(
			answer_board_seq.NEXTVAL, #{questionBoardNo}, #{answerMemberNo}, #{answerTitle}, #{answerContents}, SYSDATE, 'I001','R001'
		)
	</insert>
	
</mapper>